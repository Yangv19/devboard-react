{"version":3,"sources":["types/actions.tsx","reducers/alert.tsx","reducers/auth.tsx","reducers/post.tsx","reducers/comment.tsx","reducers/index.tsx","store.tsx","actions/alert.tsx","actions/errors.tsx","actions/auth.tsx","components/layout/Navbar.tsx","components/layout/Alert.tsx","components/layout/Footer.tsx","components/basic/Landing.tsx","components/auth/Register.tsx","components/auth/Login.tsx","actions/post.tsx","img/spinner.gif","components/layout/Spinner.tsx","components/posts/PostForm.tsx","components/posts/PostItem.tsx","components/posts/Posts.tsx","actions/comment.tsx","components/post/CommentItem.tsx","components/post/CommentForm.tsx","components/post/Post.tsx","components/auth/EditProfile.tsx","components/basic/NotFound.tsx","components/routing/AuthRoutes.tsx","components/basic/NotAuthorized.tsx","components/routing/GuestRoutes.tsx","components/routing/Auth.tsx","App.tsx","index.tsx"],"names":["SET_ALERT","REMOVE_ALERT","LOAD_USER","RESET_AUTH","SET_POSTS","SET_POST","POST_ERROR","RESET_POST","SET_COMMENTS","initialState","isAuthenticated","user","posts","post","loadedPosts","loadedPost","comments","loadedComments","combineReducers","alert","state","action","type","payload","constants","filter","id","auth","comment","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","setAlert","msg","alertType","timeout","dispatch","v4","setTimeout","errors","err","a","response","data","console","error","logout","forEach","localStorage","removeItem","axios","defaults","headers","common","loadUser","get","res","mapDispatch","connector","connect","authLinks","to","className","onClick","e","guestLinks","alerts","map","Footer","href","register","formData","setItem","token","history","useState","username","email","password","password2","setFormData","useEffect","push","onChange","target","name","value","onSubmit","preventDefault","placeholder","login","getPosts","src","spinner","alt","addPost","text","setText","cols","rows","addLike","postId","patch","addDislike","deletePost","delete","removeLike","removeDislike","PostItem","showActions","liked","disliked","setState","likes","find","like","_id","dislikes","dislike","avatar","date","slice","length","defaultProps","Spinner","getComments","deleteComment","commentId","userId","addComment","getPost","resetPost","match","params","deleteAccount","updateAccount","img","FormData","append","setImg","files","NotFound","AuthRoutes","exact","path","component","EditProfile","NotAuthorized","GuestRoutes","Register","Login","Posts","Post","App","Landing","Auth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a57e0801.chunk.js","sourcesContent":["import { ThunkAction } from \"redux-thunk\";\r\nimport { Action } from \"redux\";\r\nimport{ Alerts, RootState } from \"./reducers\";\r\n\r\nexport const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\n\r\nexport const LOAD_USER = \"LOAD_USER\";\r\nexport const RESET_AUTH = \"RESET_AUTH\"\r\n\r\nexport const SET_POSTS = \"SET_POSTS\";\r\nexport const SET_POST = \"SET_POST\";\r\nexport const POST_ERROR = \"POST_ERROR\";\r\nexport const RESET_POST = \"RESET_POST\";\r\n\r\nexport const SET_COMMENTS = \"SET_COMMENTS\";\r\n\r\nexport type AppThunk = ThunkAction<void, RootState, object, Action<string>>;\r\n\r\nexport interface AlertActionTypes {\r\n    type: typeof SET_ALERT | typeof REMOVE_ALERT,\r\n    payload: Alerts\r\n};\r\n\r\nexport interface AuthActionTypes {\r\n    type: typeof LOAD_USER | typeof RESET_AUTH,\r\n    payload: object\r\n};\r\n\r\nexport interface PostActionTypes {\r\n    type: typeof SET_POSTS | typeof SET_POST | typeof POST_ERROR | typeof RESET_POST,\r\n    payload: object[]\r\n};\r\n\r\nexport interface CommentActionTypes {\r\n    type: typeof SET_COMMENTS,\r\n    payload: object[]\r\n}\r\n","import * as constants from \"../types/actions\";\r\nimport { Alerts } from \"../types/reducers\";\r\n\r\nconst initialState: Alerts[] = [];\r\n\r\nexport default function(state = initialState, action : constants.AlertActionTypes): Alerts[] {\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n        case constants.SET_ALERT:\r\n            return [...state, payload];\r\n        case constants.REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload.id);\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n","import * as constants from \"../types/actions\";\r\nimport { Auth } from \"../types/reducers\";\r\n\r\nconst initialState : Auth = {\r\n    isAuthenticated: false,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action: constants.AuthActionTypes) : Auth {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case constants.LOAD_USER:\r\n            return {\r\n                isAuthenticated: true,\r\n                user: payload\r\n            };\r\n        case constants.RESET_AUTH:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n","import * as constants from \"../types/actions\";\r\nimport { Post } from \"../types/reducers\";\r\n\r\nconst initialState : Post = {\r\n    posts: [],\r\n    post: null,\r\n    loadedPosts: false,\r\n    loadedPost: false\r\n};\r\n\r\nexport default function(state = initialState, action: constants.PostActionTypes) : Post {\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n        case constants.SET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loadedPosts: true\r\n            };\r\n        case constants.SET_POST:\r\n            return {\r\n                ...state,\r\n                post: payload,\r\n                loadedPost: true\r\n            };\r\n        case constants.POST_ERROR:\r\n            return {\r\n                ...state,\r\n                post: null,\r\n                loadedPost: true\r\n            };\r\n        case constants.RESET_POST:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n","import * as constants from \"../types/actions\";\r\nimport { Comment } from \"../types/reducers\";\r\n\r\nconst initialState : Comment = {\r\n    comments: [],\r\n    loadedComments: false\r\n};\r\n\r\nexport default function(state = initialState, action: constants.CommentActionTypes) : Comment {\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n        case constants.SET_COMMENTS:\r\n            return {\r\n                comments: payload,\r\n                loadedComments: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./alert\";\r\nimport auth from \"./auth\";\r\nimport post from \"./post\";\r\nimport comment from \"./comment\"\r\n\r\nexport default combineReducers({\r\n    alert,\r\n    auth,\r\n    post,\r\n    comment\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst initialState : object = {};\r\n\r\nconst store : any = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import * as constants from \"../types/actions\";\r\nimport { v4 } from \"uuid\";\r\n\r\nexport const setAlert = (msg : string, alertType : string, timeout : number = 2000) : constants.AppThunk => dispatch => {\r\n    const id = v4();\r\n    dispatch({\r\n        type: constants.SET_ALERT,\r\n        payload: {msg, alertType, id}\r\n    });\r\n\r\n    setTimeout(() => {dispatch({\r\n                            type: constants.REMOVE_ALERT, \r\n                            payload: {msg, alertType, id}})}, timeout);\r\n};\r\n","import { setAlert } from \"./alert\";\r\nimport { logout } from \"./auth\";\r\nimport * as constants from \"../types/actions\";\r\n\r\nconst errors = (err : any) : constants.AppThunk => async dispatch => {\r\n    if (!err.response || !err.response.data || !err.response.data.errors) {\r\n        console.error(err);\r\n        return;\r\n    };\r\n\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors && errors[0].msg === \"Token is not valid\") {\r\n        dispatch(setAlert(\"Session expired\", \"danger\"));\r\n        dispatch(logout());\r\n        return;\r\n    };\r\n\r\n    errors.forEach((error : any) => dispatch(setAlert(error.msg, \"danger\")));\r\n};\r\n\r\nexport default errors;\r\n","import axios from \"axios\";\r\nimport * as constants from \"../types/actions\";\r\nimport errors from \"./errors\";\r\nimport { setAlert } from \"./alert\";\r\nimport { RegisterForm, LoginForm } from \"../types/forms\";\r\n\r\nexport const logout = () : constants.AppThunk => async dispatch => {\r\n    localStorage.removeItem(\"token\");\r\n    delete axios.defaults.headers.common[\"x-auth-token\"];\r\n    dispatch({type: constants.RESET_AUTH});\r\n};\r\n\r\nexport const loadUser = () : constants.AppThunk => async dispatch => {\r\n    try {\r\n        const res : any = await axios.get(\"/api/users\");\r\n        dispatch({\r\n            type: constants.LOAD_USER,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const register = (formData : RegisterForm) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        const res : any = await axios.post(\"/api/users/register\", formData);\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        axios.defaults.headers.common[\"x-auth-token\"] = localStorage.token;\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const login = (formData : LoginForm) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        const res : any = await axios.post(\"/api/users/login\", formData);\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        axios.defaults.headers.common[\"x-auth-token\"] = localStorage.token;\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const updateAccount = (img : any) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        const formData : FormData = new FormData();\r\n        formData.append(\"img\", img);\r\n        await axios.patch(\"/api/users\", formData);\r\n        dispatch(setAlert(\"Image Added\", \"success\"));\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const deleteAccount = () : constants.AppThunk => async dispatch => {\r\n    try {\r\n        await axios.delete(\"/api/users\");\r\n        dispatch(setAlert(\"Account deleted\", \"danger\"));\r\n        dispatch(logout());\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { logout } from \"../../actions/auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nconst mapDispatch = {\r\n    logout\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nconst Navbar = ({ logout, isAuthenticated } : PropsFromRedux) : JSX.Element => {\r\n    const authLinks = (\r\n\t\t<Fragment>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to=\"/edit-profile\">\r\n\t\t\t\t\t<i className=\"fas fa-user\"/>\r\n\t\t\t\t\t<span className=\"hide-mobile\"> Profile</span>\r\n\t\t\t\t</Link> \r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link onClick={e => logout()} to=\"/\">\r\n\t\t\t\t\t<i className=\"fas fa-sign-out-alt\"/>\r\n\t\t\t\t\t<span className=\"hide-mobile\"> Logout</span>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t</Fragment>\r\n    );\r\n\r\n    const guestLinks = (\r\n\t\t<Fragment>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to=\"/register\">\r\n\t\t\t\t\t<i className=\"fas fa-plus\"></i>\r\n\t\t\t\t\t<span className=\"hide-mobile\"> Register</span>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to=\"/login\">\r\n\t\t\t\t\t<i className=\"fas fa-sign-in-alt\"></i>\r\n\t\t\t\t\t<span className=\"hide-mobile\"> Login</span>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t</Fragment>    \t\r\n    );\r\n\r\n    return (\r\n      <nav className=\"navbar bg-dark\">\r\n        <h1>\r\n        \t<Link to=\"/\">\r\n            \t<i className=\"fas fa-file-code\"/>\r\n            \t<span className=\"hide-mobile\"> DevBoard</span>\r\n          \t</Link>\r\n\t\t</h1>\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to=\"/posts\">\r\n\t\t\t\t\t<i className=\"fas fa-comment-alt\"></i>\r\n\t\t\t\t\t<span className=\"hide-mobile\"> Posts</span>\r\n\t\t\t\t</Link> \r\n\t\t\t</li>\r\n\t\t\t{isAuthenticated ? authLinks : guestLinks}\r\n\t\t</ul>\r\n      </nav>\r\n    );\r\n};\r\n\r\nexport default connector(Navbar);\r\n","import React, { Fragment } from \"react\";\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    alerts: state.alert\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nconst Alert = ({ alerts } : PropsFromRedux) : JSX.Element => {\r\n    return (\r\n        <Fragment>\r\n            {alerts.map(alert => (\r\n                <div key={alert.id} className={`alert bg-${alert.alertType}`}>\r\n                    {alert.msg}\r\n                </div>\r\n            ))}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default connector(Alert);\r\n","import React from \"react\";\r\n\r\nconst Footer = () : JSX.Element => {\r\n    return (\r\n        <footer className=\"footer hide-mobile\">\r\n            <div className=\"item\">\r\n                <span>Author: Vincent Yang</span>\r\n                <p className=\"footer-links\">\r\n                    <a href=\"https://vincent-yang.com\">Personal Website</a>\r\n                    <span> | </span>\r\n                    <a href=\"https://github.com/Yangv19\">Github</a>\r\n                </p>\r\n            </div>\r\n            <div className=\"item\">    \r\n                <div>\r\n                    <i className=\"fa fa-phone\"></i>\r\n                    <span> 647-636-3461</span>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fa fa-envelope\"></i>\r\n                    <span> v6yang@uwaterloo.ca</span>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Fragment } from \"react\";\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alert from \"../layout/Alert\";\r\nimport Footer from \"../layout/Footer\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nconst Landing = ({ isAuthenticated } : PropsFromRedux) : JSX.Element => {\r\n    const guestLinks = (\r\n        <div>\r\n            <Link to=\"/register\" className=\"btn light bg-primary\">Sign Up</Link>\r\n            <Link to=\"/login\" className=\"btn primary bg-light\">Login</Link>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Fragment>\r\n            <section className=\"landing\">\r\n                <div className=\"dark-overlay\">\r\n                    <div className=\"landing-inner\">\r\n                        <Alert/>\r\n                        <h1 className=\"x-large\">Developer Board</h1>\r\n                        <p className=\"lead\">\r\n                            Start sharing issues, having discussions, and working collaboratively now\r\n                        </p>\r\n                        {!isAuthenticated && guestLinks}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <Footer/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default connector(Landing);\r\n","import React, { Fragment, useState, useEffect } from \"react\"\r\nimport { History, LocationState } from \"history\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport { register } from \"../../actions/auth\";\r\nimport Footer from \"../layout/Footer\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nconst mapDispatch = {\r\n    setAlert,\r\n    register\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Props extends PropsFromRedux {\r\n    history: History<LocationState>\r\n}\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated, history } : Props) : JSX.Element => {\r\n    const [formData, setFormData] = useState({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password2: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            history.push(\"/\");\r\n        };\r\n    }, [isAuthenticated, history]);\r\n    \r\n    const { username, email, password, password2 } = formData;\r\n\r\n    const onChange = (e : React.ChangeEvent<HTMLInputElement>) => setFormData({...formData, [e.target.name] : e.target.value});\r\n\r\n    const onSubmit = (e : React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        if (password !== password2) {\r\n            setAlert(\"Password do not match\", \"danger\");\r\n        } else {\r\n            register({username, email, password});\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <section className=\"container\">\r\n                <h1 className=\"large primary\">Sign Up</h1>\r\n                <p className=\"lead\">\r\n                    <i className=\"fas fa-user\"/>\r\n                    <span className=\"hide-mobile\"> Create Your Account</span>\r\n                </p>\r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Username\" \r\n                            name=\"username\" \r\n                            value={username} \r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Email Address\" \r\n                            name=\"email\" \r\n                            value={email} \r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            name=\"password2\"\r\n                            value={password2}\r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn light bg-primary\" value=\"Register\" />\r\n                </form>\r\n                <div className=\"my-1\">\r\n                    <p>\r\n                        Already have an account?\r\n                    </p>\r\n                    <Link to=\"/login\">Sign In</Link>\r\n                </div>\r\n            </section>\r\n            <Footer/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default connector(Register);\r\n","import React, { Fragment, useState, useEffect } from \"react\"\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { History, LocationState } from \"history\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"../layout/Footer\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nconst mapDispatch = {\r\n    login\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Props extends PropsFromRedux {\r\n    history: History<LocationState>\r\n};\r\n\r\nconst Login = ({ login, isAuthenticated, history } : Props) : JSX.Element => {\r\n    const [formData, setFormData] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            history.push(\"/\");\r\n        };\r\n    }, [isAuthenticated, history]);\r\n    \r\n    const { email, password } = formData;\r\n\r\n    const onChange = (e : React.ChangeEvent<HTMLInputElement>) => setFormData({...formData, [e.target.name] : e.target.value});\r\n\r\n    const onSubmit = (e : React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        login(formData);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <section className=\"container\">\r\n                <h1 className=\"large primary\">Sign In</h1>\r\n                <p className=\"lead\">\r\n                    <i className=\"fas fa-user\"/>\r\n                    <span className=\"hide-mobile\"> Sign Into Your Account</span>\r\n                </p>\r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Email Address\" \r\n                            name=\"email\" \r\n                            value={email} \r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn light bg-primary\" value=\"Login\" />\r\n                </form>\r\n                <div className=\"my-1\">\r\n                    <p>\r\n                        Don\"t have an account?\r\n                    </p>\r\n                    <Link to=\"/register\">Sign Up</Link>\r\n                </div>\r\n            </section>\r\n            <Footer/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default connector(Login);\r\n","import axios from \"axios\";\r\nimport * as constants from \"../types/actions\";\r\nimport errors from \"./errors\";\r\nimport { setAlert } from \"./alert\";\r\nimport { AddPost } from \"../types/forms\";\r\n\r\nexport const getPosts = () : constants.AppThunk => async dispatch => {\r\n    try {\r\n        const res : any = await axios.get(\"/api/posts\");\r\n        dispatch({\r\n            type: constants.SET_POSTS,\r\n            payload: res.data\r\n        });\r\n    } catch(err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const addPost = (formData : AddPost) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/posts\", formData);\r\n        dispatch(setAlert(\"Post Created\", \"success\"));\r\n        dispatch(getPosts());\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const deletePost = (id : string) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/posts/${id}`);\r\n        dispatch(setAlert(\"Post Removed\", \"success\"));\r\n        dispatch(getPosts());\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const getPost = (id : string) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        const res : any = await axios.get(`/api/posts/${id}`);\r\n        dispatch({\r\n            type: constants.SET_POST,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n        dispatch({\r\n            type: constants.POST_ERROR\r\n        });\r\n    }\r\n}\r\n\r\nexport const resetPost = () : constants.AppThunk => dispatch => {\r\n    dispatch({\r\n        type: constants.RESET_POST\r\n    });\r\n};\r\n\r\nexport const addLike = (postId : string) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        await axios.patch(`/api/posts/likes/${postId}`);\r\n        dispatch(getPosts());\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const removeLike = (postId : string) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/posts/likes/${postId}`);\r\n        dispatch(getPosts());\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const addDislike = (postId : string) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        await axios.patch(`/api/posts/dislikes/${postId}`);\r\n        dispatch(getPosts());\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const removeDislike = (postId : string) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/posts/dislikes/${postId}`);\r\n        dispatch(getPosts());\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/spinner.f30ae0f0.gif\";","import React from \"react\";\r\nimport spinner from \"../../img/spinner.gif\";\r\n\r\nexport default () : JSX.Element => (\r\n    <img\r\n        src={spinner}\r\n        alt=\"\"\r\n        className=\"spinner\"\r\n    />\r\n);\r\n","import React, { Fragment, useState } from \"react\"\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { addPost } from \"../../actions/post\";\r\n\r\nconst mapDispatch = {\r\n    addPost\r\n};\r\n\r\nconst connector = connect(null, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\nconst PostForm = ({ addPost } : PropsFromRedux) : JSX.Element => {\r\n    const [text, setText] = useState('');\r\n\r\n    const onChange = (e : React.ChangeEvent<HTMLTextAreaElement>) => setText(e.target.value);\r\n\r\n    const onSubmit = (e : React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        addPost({text});\r\n        setText('');\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"bg-primary light p\">\r\n                <h3>Say Something...</h3>\r\n            </div>\r\n            <form className=\"form my-1\" onSubmit={e => onSubmit(e)}>\r\n                <textarea\r\n                    cols={30}\r\n                    rows={5}\r\n                    placeholder=\"Create a post\"\r\n                    value={text}\r\n                    onChange={e => onChange(e)}\r\n                />\r\n                <input type=\"submit\" className=\"btn bg-dark my-1\" value=\"Submit\"/>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default connector(PostForm);\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { addLike, addDislike, deletePost, removeLike, removeDislike } from \"../../actions/post\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    auth: state.auth\r\n});\r\n\r\nconst mapDispatch = {\r\n    addLike, \r\n    addDislike, \r\n    deletePost, \r\n    removeLike, \r\n    removeDislike\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Props extends PropsFromRedux {\r\n    post: any,\r\n    showActions: boolean\r\n}\r\n\r\nconst PostItem = ( {addLike, addDislike, deletePost, removeLike, removeDislike, auth, post, showActions } : Props) : JSX.Element => {\r\n    const [state, setState] = useState({\r\n        liked: false, \r\n        disliked: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (auth.isAuthenticated) {\r\n            if (post.likes.find((like : any) => like.user ===  auth.user._id) && \r\n                post.dislikes.find((dislike : any) => dislike.user ===  auth.user._id)) {\r\n                setState({disliked: true, liked: true});\r\n            } else if (post.likes.find((like : any) => like.user ===  auth.user._id)) {\r\n                setState({disliked: false, liked: true});\r\n            } else if (post.dislikes.find((dislike : any) => dislike.user ===  auth.user._id)) {\r\n                setState({disliked: true, liked: false});\r\n            };\r\n        };\r\n    }, [post, auth]);\r\n\r\n    const like = (e: React.SyntheticEvent) => {\r\n        if (auth.isAuthenticated) {\r\n            if (!state.liked) {\r\n                addLike(post.postId);\r\n            } else {\r\n                removeLike(post.postId);\r\n            };\r\n            setState({...state, liked: !state.liked});\r\n        };\r\n    };\r\n\r\n    const dislike = (e: React.SyntheticEvent) => {\r\n        if (auth.isAuthenticated) {\r\n            if (!state.disliked) {\r\n                addDislike(post.postId);\r\n            } else {\r\n                removeDislike(post.postId);\r\n            };\r\n            setState({...state, disliked: !state.disliked});\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className=\"post p-1\">\r\n            <div className=\"post-first\">\r\n                <img\r\n                    className=\"round-img hide-mobile\"\r\n                    src={`data:image/png;base64, ${post.user.avatar}`}\r\n                    alt=\"\"\r\n                />\r\n                <h4>{post.user.username}</h4>\r\n            </div>\r\n            <div>\r\n                <p className=\"my-1\">\r\n                    {post.text}\r\n                </p>\r\n                <p className=\"post-date\">\r\n                    Posted on {post.date.slice(0, 10)}\r\n                </p>\r\n                {showActions && \r\n                    <Fragment>\r\n                        <button onClick={e => like(e)} className=\"btn bg-light primary\">\r\n                            <i className=\"fas fa-thumbs-up\"/>\r\n                            {post.likes.length > 0 && \r\n                            <span className=\"comment-count\"> {post.likes.length}</span>}\r\n                        </button>\r\n                        <button onClick={e => dislike(e)} className=\"btn bg-light primary\">\r\n                            <i className=\"fas fa-thumbs-down\"/>\r\n                            {post.dislikes.length > 0 && \r\n                            <span className=\"comment-count\"> {post.dislikes.length}</span>}\r\n                        </button>\r\n                        <Link to={`/posts/${post.postId}`} className=\"btn bg-primary light\">  \r\n                            <i className=\"fas fa-comment\"></i>\r\n                            <span className=\"hide-mobile\"> Discussion</span>\r\n                    \r\n                        </Link>\r\n                        {auth.isAuthenticated && post.user._id === auth.user._id && \r\n                            <button onClick={e => deletePost(post.postId)} className=\"btn bg-danger\">\r\n                                <i className=\"fas fa-times\"/>\r\n                            </button>\r\n                        }                \r\n                    </Fragment>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nPostItem.defaultProps = {\r\n    showActions: true\r\n};\r\n\r\nexport default connector(PostItem);\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getPosts } from \"../../actions/post\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport PostForm from \"./PostForm\";\r\nimport PostItem from \"./PostItem\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    post: state.post,\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nconst mapDispatch = {\r\n    getPosts\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\nconst Posts = ({ getPosts, post, isAuthenticated } : PropsFromRedux) : JSX.Element => {\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, [getPosts]);\r\n\r\n    return (!post.loadedPosts ? <Spinner/> : \r\n        <Fragment>\r\n            <section className=\"container\">\r\n                <h1 className=\"large primary\">Posts</h1>\r\n                <p className=\"lead\">\r\n                    <i className=\"fas fa-user hide-mobile\">Welcome to the Community</i>\r\n                </p>\r\n                {isAuthenticated &&\r\n                    <PostForm/>\r\n                }\r\n                <div>\r\n                    {post.posts.map(post => (\r\n                        <PostItem key={post.postId} post={post}/>\r\n                    ))}\r\n                </div>\r\n            </section>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default connector(Posts);\r\n","import axios from \"axios\";\r\nimport * as constants from \"../types/actions\";\r\nimport errors from \"./errors\";\r\nimport { setAlert } from \"./alert\";\r\nimport { AddComment } from \"../types/forms\";\r\n\r\nexport const addComment = (postId : string, formData : AddComment) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        await axios.post(`/api/posts/comments/${postId}`, formData);\r\n        dispatch(setAlert(\"Comment added\", \"success\"));\r\n        dispatch(getComments(postId));\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const deleteComment = (postId : string, commentId : string) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/posts/comments/${postId}/${commentId}`);\r\n        dispatch(setAlert(\"Comment removed\", \"success\"));\r\n        dispatch(getComments(postId));\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const getComments = (postId : string) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        const res : any = await axios.get(`/api/posts/comments/${postId}`);\r\n        dispatch({\r\n            type: constants.SET_COMMENTS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { deleteComment } from \"../../actions/comment\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    auth: state.auth\r\n});\r\n\r\nconst mapDispatch = {\r\n    deleteComment\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Props extends PropsFromRedux {\r\n    comment: any,\r\n    postId: string\r\n};\r\n\r\nconst CommentItem = ({ deleteComment, postId, comment, auth } : Props) : JSX.Element => {\r\n    return (\r\n        <div className=\"post p-1\">\r\n        \t<div className=\"post-first\">\r\n\t\t\t\t<img\r\n\t\t\t\t\tclassName=\"round-img hide-mobile\"\r\n\t\t\t\t\tsrc={`data:image/png;base64, ${comment.user.avatar}`}\r\n\t\t\t\t\talt=\"\"\r\n\t\t\t\t/>\r\n        \t\t<h4>{comment.user.username}</h4>\r\n        \t</div>\r\n        \t<div>\r\n    \t\t\t<p className=\"my-1\">\r\n            \t\t{comment.text}\r\n            \t</p>\r\n            \t<p className=\"post-date\">\r\n            \t\t{comment.date.slice(0, 10)}\r\n        \t\t</p>\r\n\t\t\t\t{auth.isAuthenticated && comment.user.userId === auth.user.userId && (\r\n\t\t\t\t\t<button onClick={e => deleteComment(postId, comment.commentId)} className=\"btn bg-danger\">\r\n\t\t\t\t\t\t<i className=\"fas fa-times\"/>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n        \t</div>\r\n    \t</div>\r\n    );\r\n};\r\n\r\nexport default connector(CommentItem);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { addComment } from \"../../actions/comment\";\r\n\r\nconst mapDispatch = {\r\n    addComment\r\n};\r\n\r\nconst connector = connect(null, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Props extends PropsFromRedux {\r\n    postId: string\r\n};\r\n\r\nconst CommentForm = ({ addComment, postId } : Props) : JSX.Element => {\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const onChange = (e : React.ChangeEvent<HTMLTextAreaElement>) => setText(e.target.value);\r\n\r\n    const onSubmit = (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        addComment(postId, {text});\r\n        setText(\"\");\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <form className=\"form my-1\" onSubmit={e => onSubmit(e)}>\r\n                <textarea\r\n                    name=\"text\"\r\n                    cols={30}\r\n                    rows={5}\r\n                    placeholder=\"Leave a comment\"\r\n                    value={text}\r\n                    onChange={e => onChange(e)}\r\n                />\r\n            <input type=\"submit\" className=\"btn bg-dark my-1\" value=\"Submit\" />\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default connector(CommentForm);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getPost, resetPost } from \"../../actions/post\";\r\nimport { getComments } from \"../../actions/comment\"\r\nimport { History, LocationState } from \"history\";\r\nimport { match } from \"react-router-dom\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport PostItem from \"../posts/PostItem\";\r\nimport CommentItem from \"../post/CommentItem\";\r\nimport CommentForm from \"../post/CommentForm\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    post: state.post,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    comment: state.comment\r\n});\r\n\r\nconst mapDispatch = {\r\n    getPost, \r\n    resetPost,\r\n    getComments\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Identifiable {\r\n    id: string\r\n}\r\n\r\ninterface Props extends PropsFromRedux {\r\n    history: History<LocationState>,\r\n    match: match<Identifiable>\r\n}\r\n\r\nconst Post = ({ getPost, resetPost, getComments, post, comment, match, isAuthenticated, history } : Props) : JSX.Element => {\r\n    useEffect(() => {\r\n        getPost(match.params.id);\r\n    }, [getPost, match]);\r\n\r\n    useEffect(() => {\r\n        if (post.loadedPost && post.post === null) {\r\n            resetPost();\r\n            history.push(\"/NotFound\");\r\n        }\r\n    }, [post, history, resetPost]);\r\n\r\n    useEffect(() => {\r\n        getComments(match.params.id);\r\n    }, [getComments, match]);\r\n\r\n    return (post.post === null ? <Spinner/> :\r\n        <Fragment>\r\n            <section className=\"container\">\r\n                <PostItem post={post.post} showActions={false}/>\r\n                {isAuthenticated &&\r\n                    <CommentForm postId={post.post.postId}/>\r\n                }\r\n                <div className=\"bg-primary p light my-1\">\r\n                    <h3>Comments</h3>\r\n                </div>\r\n                {comment.loadedComments ? comment.comments.map((comment : any) => (\r\n                    <CommentItem key={comment.commentId} comment={comment} postId={post.post.postId}/>\r\n                )) : null}\r\n            </section>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\n\r\nexport default connector(Post);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { History, LocationState } from \"history\";\r\nimport { deleteAccount, updateAccount } from \"../../actions/auth\";\r\nimport Footer from \"../layout/Footer\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    user: state.auth.user\r\n});\r\n\r\nconst mapDispatch = {\r\n    deleteAccount, \r\n    updateAccount\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Props extends PropsFromRedux {\r\n    history: History<LocationState>\r\n};\r\n\r\nconst EditProfile = ({ deleteAccount, updateAccount, history, user } : Props) : JSX.Element => {\r\n    const [img, setImg] = useState<null | Blob>(null);\r\n\r\n    const onChange = (e : any) => setImg(e.target.files[0]);\r\n    \r\n    const onSubmit = (e : React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        updateAccount(img);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <section className=\"container\">\r\n                <h1 className=\"large primary\">Dashboard</h1>\r\n                <p className=\"lead\">\r\n                    <i className=\"fas fa-user\">Welcome {user.username}</i>\r\n                </p>\r\n                <img\r\n                    className=\"round-img\"\r\n                    src={`data:image/png;base64, ${user.avatar}`}\r\n                    alt=\"\"\r\n                />\r\n                <div>\r\n                    <button className=\"btn bg-danger w-15\" onClick={e => {\r\n                                                                deleteAccount()\r\n                                                                history.push(\"/\")}}>\r\n                        <i className=\"fas fa-user-minus\"/> Delete My Account\r\n                    </button>\r\n                    <form className=\"my-1\" onSubmit={e => onSubmit(e)}>\r\n                        <input className=\"btn bg-success w-15\" type=\"file\" name=\"img\" onChange={e => onChange(e)}/>\r\n                        <div className=\"my-1\">\r\n                            <input className=\"btn bg-success w-15\" type=\"submit\" value=\"Change profile\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </section>\r\n            <Footer/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default connector(EditProfile);\r\n","import React, { Fragment } from \"react\";\r\nimport Footer from \"../layout/Footer\";\r\n\r\nconst NotFound = () : JSX.Element => {\r\n    return (\r\n        <Fragment>\r\n            <section className=\"container full\">\r\n                <h1 className=\"large text-primary\">\r\n                    <i className=\"fas fa-exclamation-triangle\"/>\r\n                    <span> 404 Page Not Found</span>\r\n                </h1>\r\n                <p className=\"lead\">Sorry this page does not exist</p>\r\n            </section>\r\n            <Footer/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\"\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport EditProfile from \"../auth/EditProfile\";\r\nimport NotFound from \"../basic/NotFound\";\r\n\r\nconst AuthRoutes = () : JSX.Element => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/edit-profile\" component={EditProfile}/>\r\n            <Route exact path =\"/*\" component={NotFound}/>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default AuthRoutes;\r\n","import React, { Fragment } from \"react\";\r\nimport Footer from \"../layout/Footer\";\r\n\r\nconst NotAuthorized = () : JSX.Element => {\r\n    return (\r\n        <Fragment>\r\n            <section className=\"container full\">\r\n                <h1 className=\"large text-primary\">\r\n                    <i className=\"fas fa-skull-crossbones\"/>\r\n                    <span> 401 Not Authorized</span>\r\n                </h1>\r\n                <p className=\"lead\">Sorry you are not authorized to view this page</p>\r\n            </section>\r\n            <Footer/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default NotAuthorized;\r\n","import React from \"react\"\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport NotAuthorized from \"../basic/NotAuthorized\";\r\nimport NotFound from \"../basic/NotFound\";\r\n\r\nconst GuestRoutes = () : JSX.Element => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/edit-profile\" component={NotAuthorized}/>\r\n            <Route exact path =\"/*\" component={NotFound}/>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default GuestRoutes;\r\n","import React, { Fragment } from \"react\";\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Alert from \"../layout/Alert\";\r\nimport Register from \"../auth/Register\";\r\nimport Login from \"../auth/Login\";\r\nimport Posts from \"../posts/Posts\";\r\nimport Post from \"../post/Post\";\r\nimport AuthRoutes from \"./AuthRoutes\";\r\nimport GuestRoutes from \"./GuestRoutes\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nconst Auth = ({ isAuthenticated } : PropsFromRedux) : JSX.Element => {\r\n    return (\r\n        <Fragment>\r\n            <Alert/>\r\n            <Switch>\r\n                <Route exact path=\"/register\" component={Register}/>\r\n                <Route exact path=\"/login\" component={Login}/>\r\n                <Route exact path=\"/posts\" component={Posts}/>\r\n                <Route exact path=\"/posts/:id\" component={Post}/>\r\n                {isAuthenticated ? \r\n                    <AuthRoutes/> : <GuestRoutes/>\r\n                }\r\n            </Switch>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default connector(Auth);\r\n","import \"./App.css\";\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUser } from \"./actions/auth\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/basic/Landing\";\nimport Auth from \"./components/routing/Auth\";\n\nconst App  = () : JSX.Element => {\n\tuseEffect(() => {\n\t\tif (localStorage.token) {\n\t\t\taxios.defaults.headers.common[\"x-auth-token\"] = localStorage.token;\n\t\t\tstore.dispatch(loadUser());\n\t\t};\n\t}, []);\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Navbar/>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Landing}/>\n\t\t\t\t\t<Route exact path=\"/*\" component={Auth}/>\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t</Provider>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}